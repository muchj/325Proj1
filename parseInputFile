////////////////////////////////////////////
// 	parseInputFile
//	- Is THE function called that is used for grading
//	- It reads in MSS_Problems.txt
//	- Crunches the sum for all for algorithms
//	- Outputs the result onto the screen AND MSS_Results.txt for grading 
////////////////////////////////////////////
void parseInputFile(int lineCount){
		
		char comma = ',';
		char leftBracket = '[';
		char rightBracket = ']';
		
		ifstream inputFile("MSS_Problems.txt");
		ofstream outputFile("tempFile"); // Used for testing.
		char c;
		int nextInt;
		
		int A[lineCount][100]; // Make lineCount number of arrays.
		int arraySize[lineCount]; // Corresponding array sizes.
		int size = 0; // current size of one of the arrays.
		int i = 0;
		int j = 0; // A[i][j]
		
		if (inputFile && outputFile)
		{
			while(!inputFile.eof())
			{
				inputFile >> c;
				if (c == comma || c == leftBracket)// We know an int is next.
				{
					// Used for testing.
					inputFile >> nextInt;
					outputFile << nextInt;
					outputFile << ' ';
					
					// Plug the int into its spot, and increment the spot and size.
					A[i][j] << nextInt;
					j++;
					size++;
				}

				if (c == rightBracket) // End of an array.
				{
					// Used for testing.
					outputFile << '\n';
					
					// Plug in the array size, reset size to 0, and move to next array.
					arraySize[i] << size;
					size = 0;
					i++;
					
				}
				
			}
		}
		inputFile.close();
		outputFile.close();
		
		// Should be able to run algorithms on A[i][] and arraySize[i] here.
		
		cout << "Now calculating line # " << lineCount + 1 << endl;	
}
